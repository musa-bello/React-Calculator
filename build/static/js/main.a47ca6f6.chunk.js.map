{"version":3,"sources":["Components/CalculatorLogic.js","Components/Display.js","Components/KeyPad.js","App.js","serviceWorker.js","index.js"],"names":["Logic","reset","setState","display","result","state","handleClick","bind","event","name","target","this","calculate","backspace","sqrRoot","pI","eval","e","Math","sqrt","error","PI","slice","data","React","Component","Display","props","className","type","value","disabled","KeyPad","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"wzCAIMA,M,2BACF,iBAAc,IAAD,8JACT,sTA8EJC,MAAQ,WACJ,EAAKC,SAAS,CACVC,QAAQ,GACRC,OAAQ,MA/EZ,EAAKC,MAAQ,CACTF,QAAS,GACTC,OAAQ,IAIZ,EAAKE,YAAc,EAAKA,YAAYC,KAAjB,mJATV,E,+UAaDC,GACR,IAAMC,EAAOD,EAAME,OAAOD,KACd,MAATA,EACCE,KAAKC,YAGQ,UAATH,EACJE,KAAKV,QAGQ,QAATQ,EACJE,KAAKE,YAGS,SAATJ,EACLE,KAAKG,UAGS,OAATL,EACLE,KAAKI,KAILJ,KAAKT,SAAS,CACVC,QAASQ,KAAKN,MAAMF,SAAWM,M,4CAMvC,IACIE,KAAKT,SAAS,CACVE,OAASY,KAAKL,KAAKN,MAAMF,WAE/B,MAAOc,GACLN,KAAKT,SAAS,CACVE,OAAQ,a,gCAOhB,IACIO,KAAKT,SAAS,CACVE,OAAQc,KAAKC,KAAKR,KAAKN,MAAMF,WAEnC,MAAOiB,GACLT,KAAKT,SAAS,CACVE,OAAQ,a,2BAMhB,IACIO,KAAKT,SAAS,CACVE,OAAQc,KAAKG,GAAIV,KAAKN,MAAMF,UAElC,MAAOiB,GACLT,KAAKT,SAAS,CACVE,OAAQ,a,kCAahBO,KAAKT,SAAS,CACVC,QAASQ,KAAKN,MAAMF,QAAQmB,MAAM,GAAI,O,+BAK1C,OACI,sEACI,2DAAC,wCAAD,CACIC,KAAQZ,KAAKN,QAEjB,2DAAC,uCAAD,CACIC,YAAeK,KAAKL,mB,OApGpBkB,6CAAMC,WA2GXzB,6B,gCC/Gf,oBAuEe0B,IArEf,SAAiBC,GACb,OACI,6BACI,yBAAKC,UAAU,sBACX,2BACIC,KAAK,OACLD,UAAU,eACVnB,KAAO,UACPqB,MAASH,EAAMJ,KAAKpB,QACpB4B,UAAQ,KAKhB,yBAAKH,UAAU,cAQX,uBAAGA,UAAU,UAAUD,EAAMJ,KAAKnB,Y,6BCxBlD,oBA0De4B,IAxDf,SAAgBL,GACZ,OACI,yBAAKC,UAAU,YACP,4BAAQnB,KAAK,QAAQmB,UAAU,gCAAgCK,QAAUN,EAAMrB,aAA/E,OACA,4BAAQG,KAAK,MAAMmB,UAAU,gCAAgCK,QAAUN,EAAMrB,aAA7E,MACA,4BAAQG,KAAK,OAAOmB,UAAU,gCAAgCK,QAAUN,EAAMrB,aAA9E,YACA,4BAAQG,KAAK,IAAImB,UAAU,gCAAgCK,QAAUN,EAAMrB,aAA3E,OACA,4BAAQG,KAAK,IAAImB,UAAU,kCAAkCK,QAAUN,EAAMrB,aAA7E,OACA,4BAAQG,KAAK,IAAImB,UAAU,kCAAkCK,QAAUN,EAAMrB,aAA7E,OACA,4BAAQG,KAAK,IAAImB,UAAU,kCAAkCK,QAAUN,EAAMrB,aAA7E,OACA,4BAAQG,KAAK,IAAImB,UAAU,gCAAgCK,QAAUN,EAAMrB,aAA3E,UACA,4BAAQG,KAAK,IAAImB,UAAU,kCAAkCK,QAAUN,EAAMrB,aAA7E,OACA,4BAAQG,KAAK,IAAImB,UAAU,kCAAkCK,QAAUN,EAAMrB,aAA7E,OACA,4BAAQG,KAAK,IAAImB,UAAU,kCAAkCK,QAAUN,EAAMrB,aAA7E,OACA,4BAAQG,KAAK,IAAImB,UAAU,gCAAgCK,QAAUN,EAAMrB,aAA3E,YACA,4BAAQG,KAAK,IAAImB,UAAU,kCAAkCK,QAAUN,EAAMrB,aAA7E,OACA,4BAAQG,KAAK,IAAImB,UAAU,kCAAkCK,QAAUN,EAAMrB,aAA7E,OACA,4BAAQG,KAAK,IAAImB,UAAU,kCAAkCK,QAAUN,EAAMrB,aAA7E,OACA,4BAAQG,KAAK,IAAImB,UAAU,gCAAgCK,QAAUN,EAAMrB,aAA3E,UACA,4BAAQG,KAAK,IAAImB,UAAU,kCAAkCK,QAAUN,EAAMrB,aAA7E,YACA,4BAAQG,KAAK,IAAImB,UAAU,kCAAkCK,QAAUN,EAAMrB,aAA7E,OACA,4BAAQG,KAAK,KAAKmB,UAAU,gCAAgCK,QAAUN,EAAMrB,aAA5E,YACA,4BAAQG,KAAK,IAAImB,UAAU,mCAAoCK,QAAUN,EAAMrB,aAA/E,U,+KCRD4B,MAXf,WACE,OACE,yBAAKN,UAAY,mBACf,yBAAKA,UAAY,cACf,kBAAC,IAAD,SCGYO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA9B,GACL+B,QAAQ/B,MAAMA,EAAMgC,c","file":"static/js/main.a47ca6f6.chunk.js","sourcesContent":["import React from 'react'\r\nimport Display from './Display'\r\nimport KeyPad from './KeyPad'\r\n\r\nclass Logic extends React.Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            display: \"\",\r\n            result: \"\"\r\n            \r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n\r\n    handleClick(event) {\r\n        const name = event.target.name\r\n        if(name === \"=\"){\r\n            this.calculate()\r\n        }\r\n\r\n        else if(name === \"clear\"){\r\n            this.reset()\r\n        }\r\n\r\n        else if(name === \"del\"){\r\n            this.backspace()\r\n        }\r\n\r\n        else if (name === \"sqrt\"){\r\n            this.sqrRoot()\r\n        }\r\n\r\n        else if (name === \"pi\"){\r\n            this.pI()\r\n        }\r\n\r\n        else {\r\n            this.setState({\r\n                display: this.state.display += name\r\n            })\r\n        }\r\n    }\r\n\r\n    calculate () {\r\n        try {\r\n            this.setState({\r\n                result: (eval(this.state.display))\r\n            })\r\n        } catch (e) {\r\n            this.setState({\r\n                result: \"error\"\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    sqrRoot () {\r\n        try {\r\n            this.setState({\r\n                result: Math.sqrt(this.state.display)\r\n            })\r\n        } catch (error) {\r\n            this.setState({\r\n                result: \"error\"\r\n            })\r\n        }\r\n    }\r\n\r\n    pI () {\r\n        try {\r\n            this.setState({\r\n                result: Math.PI*(this.state.display)\r\n            })\r\n        } catch (error) {\r\n            this.setState({\r\n                result: \"error\"\r\n            })\r\n        }\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            display:\"\",\r\n            result: \"\"\r\n        })\r\n    };\r\n\r\n    backspace () {\r\n        this.setState({\r\n            display: this.state.display.slice(0, -1)\r\n        })\r\n    };\r\n\r\n    render (){\r\n        return (\r\n            <div>\r\n                <Display \r\n                    data = {this.state}\r\n                />\r\n                <KeyPad\r\n                    handleClick = {this.handleClick} \r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logic","import React from 'react'\r\n\r\nfunction Display(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"history text-right\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    name = \"display\"\r\n                    value = {props.data.display}\r\n                    disabled \r\n                />\r\n\r\n                {/* <p>{props.data.display}</p> */}\r\n            </div>\r\n            <div className=\"text-right\"> \r\n                {/* <input \r\n                    type=\"text\" \r\n                    className=\"form-control border-0\" \r\n                    name = \"result\"\r\n                    value = {props.data.result}\r\n                    disabled \r\n                /> */}\r\n                <p className=\"result\">{props.data.result}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n/* class Display extends Component {\r\n    constructor (){\r\n        super ()\r\n        this.state = {\r\n            key:\"\"\r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    handleClick (event){\r\n        const name = event.target.name\r\n        console.log(name)\r\n    }\r\n\r\n    render (){\r\n        return (\r\n            <div>\r\n                <div className=\"history text-right\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        name = \"display\"\r\n                        value = {this.state.display}\r\n                        disabled \r\n                    />\r\n                </div>\r\n                <div className=\"text-right\"> \r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control border-0 \" \r\n                        name = \"result\"\r\n                        value = {this.state.result}\r\n                        disabled \r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n */\r\nexport default Display","import React from 'react'\r\n\r\nfunction KeyPad(props) {\r\n    return (\r\n        <div className=\"keyboard\">\r\n                <button name=\"clear\" className=\"btn clear btn-outline-primary\" onClick ={props.handleClick}> c </button>\r\n                <button name=\"del\" className=\"btn clear btn-outline-primary\" onClick ={props.handleClick}>d </button>\r\n                <button name=\"sqrt\" className=\"btn clear btn-outline-primary\" onClick ={props.handleClick}> &radic; </button>\r\n                <button name=\"+\" className=\"btn digit btn-outline-primary\" onClick ={props.handleClick}> + </button>\r\n                <button name=\"7\" className=\"btn digit btn-outline-secondary\" onClick ={props.handleClick}> 7 </button>\r\n                <button name=\"8\" className=\"btn digit btn-outline-secondary\" onClick ={props.handleClick}> 8 </button>\r\n                <button name=\"9\" className=\"btn digit btn-outline-secondary\" onClick ={props.handleClick}> 9 </button>\r\n                <button name=\"/\" className=\"btn digit btn-outline-primary\" onClick ={props.handleClick}> &divide; </button>\r\n                <button name=\"4\" className=\"btn digit btn-outline-secondary\" onClick ={props.handleClick}> 4 </button>\r\n                <button name=\"5\" className=\"btn digit btn-outline-secondary\" onClick ={props.handleClick}> 5 </button>\r\n                <button name=\"6\" className=\"btn digit btn-outline-secondary\" onClick ={props.handleClick}> 6 </button>\r\n                <button name=\"-\" className=\"btn digit btn-outline-primary\" onClick ={props.handleClick}> &minus; </button>\r\n                <button name=\"1\" className=\"btn digit btn-outline-secondary\" onClick ={props.handleClick}> 1 </button>\r\n                <button name=\"2\" className=\"btn digit btn-outline-secondary\" onClick ={props.handleClick}> 2 </button>\r\n                <button name=\"3\" className=\"btn digit btn-outline-secondary\" onClick ={props.handleClick}> 3 </button>\r\n                <button name=\"*\" className=\"btn digit btn-outline-primary\" onClick ={props.handleClick}> &times; </button>\r\n                <button name=\".\" className=\"btn digit btn-outline-secondary\" onClick ={props.handleClick}> &sdot; </button>\r\n                <button name=\"0\" className=\"btn digit btn-outline-secondary\" onClick ={props.handleClick}> 0 </button>\r\n                <button name=\"pi\" className=\"btn clear btn-outline-primary\" onClick ={props.handleClick}> &pi; </button>\r\n                <button name=\"=\" className=\"btn operator btn-outline-success\"  onClick ={props.handleClick}> = </button>\r\n            </div>\r\n    )\r\n}\r\n/* class KeyPad extends Component{\r\n    \r\n    render (){\r\n        return (\r\n            <div className=\"keyboard\">\r\n                <button name=\"clear\" className=\"btn clear btn-outline-primary\" onClick ={this.handleClick}> c </button>\r\n                <button name=\"del\" className=\"btn clear btn-outline-primary\" onClick ={this.handleClick}>d </button>\r\n                <button name=\"sqrt\" className=\"btn clear btn-outline-primary\" onClick ={this.handleClick}> &radic; </button>\r\n                <button name=\"+\" className=\"btn digit btn-outline-primary\" onClick ={this.handleClick}> + </button>\r\n                <button name=\"7\" className=\"btn digit btn-outline-secondary\" onClick ={this.handleClick}> 7 </button>\r\n                <button name=\"8\" className=\"btn digit btn-outline-secondary\" onClick ={this.handleClick}> 8 </button>\r\n                <button name=\"9\" className=\"btn digit btn-outline-secondary\" onClick ={this.handleClick}> 9 </button>\r\n                <button name=\"/\" className=\"btn digit btn-outline-primary\" onClick ={this.handleClick}> &divide; </button>\r\n                <button name=\"4\" className=\"btn digit btn-outline-secondary\" onClick ={this.handleClick}> 4 </button>\r\n                <button name=\"5\" className=\"btn digit btn-outline-secondary\" onClick ={this.handleClick}> 5 </button>\r\n                <button name=\"6\" className=\"btn digit btn-outline-secondary\" onClick ={this.handleClick}> 6 </button>\r\n                <button name=\"-\" className=\"btn digit btn-outline-primary\" onClick ={this.handleClick}> &minus; </button>\r\n                <button name=\"1\" className=\"btn digit btn-outline-secondary\" onClick ={this.handleClick}> 1 </button>\r\n                <button name=\"2\" className=\"btn digit btn-outline-secondary\" onClick ={this.handleClick}> 2 </button>\r\n                <button name=\"3\" className=\"btn digit btn-outline-secondary\" onClick ={this.handleClick}> 3 </button>\r\n                <button name=\"*\" className=\"btn digit btn-outline-primary\" onClick ={this.handleClick}> &times; </button>\r\n                <button name=\".\" className=\"btn digit btn-outline-secondary\" onClick ={this.handleClick}> &sdot; </button>\r\n                <button name=\"0\" className=\"btn digit btn-outline-secondary\" onClick ={this.handleClick}> 0 </button>\r\n                <button name=\"pi\" className=\"btn clear btn-outline-primary\" onClick ={this.handleClick}> &pi; </button>\r\n                <button name=\"=\" className=\"btn operator btn-outline-success\"  onClick ={this.handleClick}> = </button>\r\n            </div>\r\n        )\r\n    }\r\n} */\r\n\r\nexport default KeyPad","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Calculator.css';\nimport Logic from './Components/CalculatorLogic';\n\nfunction App() {\n  return(\n    <div className = \"bg-dark wrapper\">\n      <div className = \"calculator\">\n        <Logic />\n      </div>\n    </div>\n    \n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}